package org.pung.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.pung.dto.Notice;

public class NoticeDAO {
	
	Connection con = null;   
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
	public List<Notice> getNoticeList(){  //List 전해줄 수 있는 메서드 만들거임
		
		List<Notice> notiList = new ArrayList<>();  //공지사항 목록 담을 리스트 선언
		
		MySQLDB mysql = new MySQLDB();  //MySQLDB로 객체 새로 만들기
		
		try {
			con = mysql.Connect();  //mysql 에 연결하고
			pstmt = con.prepareStatement(SqlLang.SELECT_ALL_NOTICE);  //sql문 넣어줌
			rs = pstmt.executeQuery();	//sql문 실행
			
			while(rs.next()) {
				Notice noti = new Notice(rs.getInt("no"),
						rs.getString("title"),
						rs.getString("content"),
						rs.getString("resdate"),
						rs.getInt("visited"));
				notiList.add(noti);  //notiList에 결과 담음
			}
			
		} catch (Exception e) {  //여기서 SQLException했더니 500에러
			e.printStackTrace();
		} finally {
			mysql.close(con, pstmt, rs); //사용한 자원 역순으로 닫아주기
		}
		
		return notiList; //공지사항 목록 담긴 notiList를 리턴해줌
		//( Q. List로 메소드 만들었으니까 리스트로 리턴해줘야하는건가? )
	}
	
	public Notice getNotice(int no) {
		Notice noti = new Notice();
		MySQLDB mysql = new MySQLDB();
		
		try {
			con = mysql.Connect();
			pstmt = con.prepareStatement(SqlLang.VISITED_UPD_NOTICE);
			pstmt.setInt(1, no);
			pstmt.executeUpdate();
			pstmt = null;
			pstmt = con.prepareStatement(SqlLang.SELECT_NOTICE_BYNO);
			pstmt.setInt(1, no);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				noti.setNo(rs.getInt("no"));
				noti.setTitle(rs.getString("title"));
				noti.setContent(rs.getString("content"));
				noti.setResdate(rs.getString("resdate"));
				noti.setVisited(rs.getInt("visited"));
			}
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			mysql.close(con, pstmt, rs);
		}
		return noti;
	}
	
}
